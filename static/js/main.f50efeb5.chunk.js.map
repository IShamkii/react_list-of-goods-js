{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","setVisibleGoods","className","onClick","sort","good1","good2","localeCompare","type","length","reverse","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAASH,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAyCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA3CU,WAEdF,EADEH,EAEA,YAAIE,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMC,cAAcF,MAI7D,YAAIL,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,OAIjET,EAnBmB,QAoDbW,KAAK,SACLN,UArDa,QAqDFN,EACP,iBACA,0BALN,iCAWA,wBACEO,QAxCa,WAEjBF,EADEH,EAEA,YAAIE,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMG,OAASJ,EAAMI,UAI9D,YAAIT,GAAcI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,WAIlEZ,EAAaJ,IA8BPe,KAAK,SACLN,UAAWN,IAAcH,EACrB,oBACA,6BALN,4BAWA,wBACEU,QArCQ,WACdF,EAAgB,YAAID,GAAcU,WAClCX,GAAeD,IAoCTU,KAAK,SACLN,UAAWJ,EACP,oBACA,6BALN,qBAWCa,KAAKC,UAAUZ,KAAkBW,KAAKC,UAAUpB,IAC/C,wBACEW,QA5CI,WACZF,EAAgBT,GAChBK,EAAa,IACbE,GAAc,IA0CNS,KAAK,SACLN,UAAU,4BAHZ,sBAUJ,6BACGF,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f50efeb5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'abc';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n\n  const sortByABC = () => {\n    if (isReversed) {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good2.localeCompare(good1)),\n      );\n    } else {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good1.localeCompare(good2)),\n      );\n    }\n\n    setSortField(SORT_FIELD_ABC);\n  };\n\n  const sortByLenght = () => {\n    if (isReversed) {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good2.length - good1.length),\n      );\n    } else {\n      setVisibleGoods(\n        [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n      );\n    }\n\n    setSortField(SORT_FIELD_LENGTH);\n  };\n\n  const reverse = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByABC}\n          type=\"button\"\n          className={sortField === SORT_FIELD_ABC\n            ? 'button is-info'\n            : 'button is-info is-light'\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLenght}\n          type=\"button\"\n          className={sortField === SORT_FIELD_LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'\n          }\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}